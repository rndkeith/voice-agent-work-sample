{
  // Voice AI Assistant - Configuration Example
  // Demonstrates comprehensive configuration strategy for healthcare AI systems
  // Note: This is a sanitized example. Production configs would use environment variables
  // and secure secret management for sensitive values.
  
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning",
      "Microsoft.EntityFrameworkCore": "Warning",
      "VoiceAgent.Core": "Information",
      "VoiceAgent.LlmRouter": "Information"
    },
    "ApplicationInsights": {
      "LogLevel": {
        "Default": "Information"
      }
    },
    // PHI-aware logging configuration
    "RedactionSettings": {
      "EnableRedaction": true,
      "RedactionStrategy": "Hash",
      "RedactionPatterns": [
        "\\b\\d{3}-\\d{2}-\\d{4}\\b",  // SSN pattern
        "\\b\\d{3}-\\d{3}-\\d{4}\\b",  // Phone pattern
        "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b"  // Email pattern
      ]
    }
  },

  // Core voice assistant configuration
  "VoiceAgent": {
    "ConversationSettings": {
      "MaxTurnsPerConversation": 20,
      "TurnTimeoutSeconds": 30,
      "ConversationTimeoutMinutes": 15,
      "DefaultLanguage": "en-US",
      "SupportedLanguages": ["en-US", "es-US", "fr-CA"],
      "EnableMultiLanguageDetection": false
    },
    
    "SlotFillingConfiguration": {
      "RequiredSlots": ["patient_name_or_callback", "appointment_type"],
      "OptionalSlots": ["date_of_birth", "preferred_provider", "insurance_plan"],
      "ValidationRules": {
        "PatientName": {
          "MinLength": 2,
          "MaxLength": 50,
          "AllowSpecialCharacters": true
        },
        "CallbackNumber": {
          "Format": "E.164",
          "CountryCodeRequired": false
        },
        "DateOfBirth": {
          "MinAge": 0,
          "MaxAge": 120,
          "Format": "MM/dd/yyyy"
        }
      }
    },

    "ComplianceSettings": {
      "EnablePhiRedaction": true,
      "RequireRecordingConsent": true,
      "ConsentExpirationMinutes": 60,
      "AuditTrailEnabled": true,
      "DataRetentionDays": 7,
      "EnableDataMinimization": true
    }
  },

  // LLM Router configuration for intelligent AI model selection
  "LlmRouter": {
    "DefaultProvider": "azure-openai",
    "EnableProviderFailover": true,
    "StickySessionEnabled": true,
    
    "RoutingPolicy": {
      "DefaultModel": "gpt-4o-mini",
      "PromotionThresholds": {
        "ComplexityScore": 0.7,
        "ConfidenceScore": 0.75,
        "LatencyBudgetExceeded": true
      },
      "CostOptimization": {
        "EnableCostOptimization": true,
        "MaxCostPerInteraction": 2.00,
        "CostVsQualityWeight": 0.7
      }
    },

    "Providers": {
      "azure-openai": {
        "Endpoint": "https://your-resource.openai.azure.com/",
        "Models": {
          "Primary": {
            "DeploymentName": "gpt-4o-mini",
            "MaxTokens": 4096,
            "Temperature": 0.3,
            "StreamingEnabled": true
          },
          "Premium": {
            "DeploymentName": "gpt-4o",
            "MaxTokens": 8192,
            "Temperature": 0.2,
            "StreamingEnabled": true
          }
        },
        "RateLimits": {
          "RequestsPerMinute": 100,
          "TokensPerMinute": 100000
        },
        "HealthCheck": {
          "Enabled": true,
          "IntervalSeconds": 30,
          "TimeoutSeconds": 10
        }
      },
      
      "aws-bedrock": {
        "Region": "us-east-1",
        "Models": {
          "Primary": {
            "ModelId": "anthropic.claude-3-sonnet-20240229-v1:0",
            "MaxTokens": 4096,
            "Temperature": 0.3
          },
          "Premium": {
            "ModelId": "anthropic.claude-3-opus-20240229-v1:0",
            "MaxTokens": 8192,
            "Temperature": 0.2
          }
        }
      },

      "google-vertex": {
        "ProjectId": "your-project-id",
        "Location": "us-central1",
        "Models": {
          "Primary": {
            "ModelName": "gemini-1.5-flash",
            "MaxTokens": 4096,
            "Temperature": 0.3
          }
        }
      }
    },

    "CircuitBreaker": {
      "FailureThreshold": 5,
      "RecoveryTimeoutSeconds": 60,
      "MonitoringIntervalSeconds": 30
    },

    "Caching": {
      "EnableResponseCaching": true,
      "DefaultTtlMinutes": 60,
      "SimilarityThreshold": 0.85,
      "MaxCacheSize": "1GB",
      "CacheEvictionPolicy": "LRU"
    }
  },

  // Telephony provider configuration (Twilio)
  "TelephonyProvider": {
    "Provider": "Twilio",
    "WebhookConfiguration": {
      "SignatureValidation": true,
      "TimeoutSeconds": 10,
      "RetryAttempts": 3,
      "RetryDelaySeconds": 5
    },
    "VoiceSettings": {
      "Voice": "alice",
      "Language": "en-US",
      "SpeechTimeoutSeconds": 5,
      "FinishOnKey": "#",
      "GatherSettings": {
        "NumDigits": 10,
        "Timeout": 30,
        "FinishOnKey": "#"
      }
    }
  },

  // External service integrations
  "ExternalServices": {
    "SchedulerApi": {
      "BaseUrl": "https://api.scheduler.company.com",
      "TimeoutSeconds": 30,
      "RetryPolicy": {
        "MaxRetries": 3,
        "BackoffStrategy": "Exponential",
        "BaseDelaySeconds": 2
      },
      "IdempotencySettings": {
        "EnableIdempotency": true,
        "IdempotencyKeyHeader": "Idempotency-Key"
      }
    }
  },

  // Feature flags for safe deployment and A/B testing
  "FeatureFlags": {
    "EnableNewPromptTemplate": false,
    "EnableEnhancedSlotFilling": true,
    "EnableResponseCaching": true,
    "EnableAdvancedRouting": true,
    "EnableMultiLanguageSupport": false,
    
    "CanarySettings": {
      "EnableCanaryDeployment": true,
      "CanaryPercentage": 10,
      "CanaryDurationMinutes": 60,
      "AutoRollbackOnErrors": true,
      "ErrorThresholdPercentage": 5
    }
  },

  // Performance and reliability configuration
  "Performance": {
    "LatencyBudgets": {
      "TotalTurnBudgetMs": 700,
      "LlmRequestBudgetMs": 500,
      "SchedulerHandoffBudgetMs": 200
    },
    
    "Throttling": {
      "EnableRateLimiting": true,
      "RequestsPerMinute": 1000,
      "RequestsPerSecond": 50,
      "BurstAllowance": 100
    },

    "HealthChecks": {
      "Endpoints": {
        "/healthz": {
          "TimeoutSeconds": 5,
          "IntervalSeconds": 30
        },
        "/readyz": {
          "TimeoutSeconds": 10,
          "IntervalSeconds": 60
        }
      }
    }
  },

  // Security configuration
  "Security": {
    "Authentication": {
      "EnableApiKeyAuthentication": false,
      "EnableJwtAuthentication": false,
      "AllowAnonymous": true  // Webhook-based authentication
    },
    
    "DataProtection": {
      "EnableEncryptionAtRest": true,
      "EnableEncryptionInTransit": true,
      "KeyRotationDays": 90
    },
    
    "NetworkSecurity": {
      "EnableCors": true,
      "AllowedOrigins": ["https://console.twilio.com"],
      "EnableHttpsRedirection": true,
      "EnableHsts": true
    }
  },

  // Observability and monitoring
  "OpenTelemetry": {
    "ServiceName": "voice-agent",
    "ServiceVersion": "1.0.0",
    "
    "TracingEnabled": true,
    "MetricsEnabled": true,
    "LoggingEnabled": true,
    
    "Exporters": {
      "Console": {
        "Enabled": false
      },
      "OTLP": {
        "Enabled": true,
        "Endpoint": "http://otel-collector:4317"
      },
      "Jaeger": {
        "Enabled": true,
        "AgentHost": "jaeger-agent",
        "AgentPort": 6831
      }
    },

    "Sampling": {
      "SamplingRatio": 1.0,
      "TraceIdRatioBasedSampler": 1.0
    }
  },

  // Business metrics and evaluation configuration
  "Evaluation": {
    "EnableContinuousEvaluation": true,
    "EvaluationIntervalMinutes": 60,
    
    "BusinessMetrics": {
      "ContainmentRateTarget": 0.85,
      "HandoffQualityTarget": 0.95,
      "LatencyP95TargetMs": 700,
      "CostPerInteractionTarget": 2.00
    },
    
    "QualityGates": {
      "MinContainmentRate": 0.80,
      "MaxLatencyP95Ms": 1000,
      "MaxErrorRate": 0.05,
      "MaxCostPerInteraction": 3.00
    },

    "TestingConfiguration": {
      "SampleSize": 1000,
      "ConfidenceLevel": 0.95,
      "StatisticalSignificanceThreshold": 0.05
    }
  },

  // Database configuration (for transcripts and evaluation data)
  "Database": {
    "Provider": "SQLite",
    "ConnectionString": "Data Source=voice_agent.db",
    "CommandTimeoutSeconds": 30,
    "EnableSensitiveDataLogging": false,
    "MigrationSettings": {
      "AutoMigrateOnStartup": true,
      "BackupBeforeMigration": true
    }
  },

  // ASP.NET Core specific configuration
  "AllowedHosts": "*",
  "Urls": "http://+:8080",
  
  "Kestrel": {
    "Limits": {
      "MaxConcurrentConnections": 1000,
      "MaxConcurrentUpgradedConnections": 1000,
      "MaxRequestBodySize": 30000000,
      "KeepAliveTimeout": "00:02:00",
      "RequestHeadersTimeout": "00:00:30"
    }
  }
}
